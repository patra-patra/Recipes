Index: src/main/java/com/example/recipes/Database.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.recipes;\r\nimport java.sql.*;\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\n\r\npublic class Database {\r\n    //просмотр списка рецептов\r\n    public static List<Recipe> showAllRecipe(){\r\n        List<Recipe> recipes = new ArrayList<>();\r\n        String query = \"SELECT * FROM recipes\";\r\n        try (Connection connection = DBconn.GetConnection();\r\n             PreparedStatement preparedStatement = connection.prepareStatement(query)) {\r\n\r\n            ResultSet rs = preparedStatement.executeQuery();\r\n\r\n            while (rs.next()){\r\n                int id = rs.getInt(\"id\");\r\n                String name = rs.getString(\"rec_name\");\r\n                String category = rs.getString(\"category\");\r\n                String main_img = rs.getString(\"main_img\");\r\n                String time = rs.getString(\"cooking_time\");\r\n                String difficulty_level = rs.getString(\"difficulty_level\");\r\n                int favorite = rs.getInt(\"favorite\");\r\n\r\n\r\n                recipes.add(new Recipe(id,name,category,main_img, time,difficulty_level,favorite));\r\n            }\r\n        } catch(SQLException throwables){\r\n            throwables.printStackTrace();\r\n        }\r\n\r\n        return recipes;\r\n    }\r\n\r\n    //показать избранные рецепты\r\n    public static List<Recipe> showRecipeFavorite(){\r\n        List<Recipe> recipes = new ArrayList<>();\r\n        String query = \"SELECT * FROM recipes  WHERE favorite = 1\";\r\n        try (Connection connection = DBconn.GetConnection();\r\n             PreparedStatement preparedStatement = connection.prepareStatement(query)) {\r\n\r\n            ResultSet rs = preparedStatement.executeQuery();\r\n\r\n            while (rs.next()){\r\n                int id = rs.getInt(\"id\");\r\n                String name = rs.getString(\"rec_name\");\r\n                String category = rs.getString(\"category\");\r\n                String main_img = rs.getString(\"main_img\");\r\n                String time = rs.getString(\"cooking_time\");\r\n                String difficulty_level = rs.getString(\"difficulty_level\");\r\n                int favorite = rs.getInt(\"favorite\");\r\n\r\n                recipes.add(new Recipe(id,name,category,main_img, time,difficulty_level,favorite));\r\n            }\r\n        } catch(SQLException throwables){\r\n            throwables.printStackTrace();\r\n        }\r\n\r\n        return recipes;\r\n    }\r\n\r\n    //показать рецепт\r\n    public static List<Recipe> showRecipe(int id){\r\n        List<Recipe> recipes = new ArrayList<>();\r\n        String query = \"SELECT * FROM recipes  WHERE id = ?\";\r\n        try (Connection connection = DBconn.GetConnection();\r\n             PreparedStatement preparedStatement = connection.prepareStatement(query)) {\r\n\r\n            ResultSet rs = preparedStatement.executeQuery();\r\n\r\n            while (rs.next()){\r\n\r\n                String name = rs.getString(\"rec_name\");\r\n                String category = rs.getString(\"category\");\r\n                String main_img = rs.getString(\"main_img\");\r\n                String time = rs.getString(\"cooking_time\");\r\n                String difficulty_level = rs.getString(\"difficulty_level\");\r\n                int favorite = rs.getInt(\"favorite\");\r\n\r\n                recipes.add(new Recipe(id,name,category,main_img, time,difficulty_level,favorite));\r\n            }\r\n        } catch(SQLException throwables){\r\n            throwables.printStackTrace();\r\n        }\r\n\r\n        return recipes;\r\n    }\r\n\r\n\r\n\r\n    //показать продукты рецепта\r\n   public static List<Product> showProducts(int rec_id){\r\n        List<Product> products = new ArrayList<>();\r\n        String query = \"SELECT prod_id FROM prod_rec  WHERE rec_id = ?\";\r\n        String query1 = \"SELECT * FROM products WHERE prod_id = ?\";\r\n        try (Connection connection = DBconn.GetConnection();\r\n             PreparedStatement preparedStatement = connection.prepareStatement(query)) {\r\n            preparedStatement.setInt(1,rec_id);\r\n            ResultSet rs = preparedStatement.executeQuery();\r\n\r\n            PreparedStatement showProducts = connection.prepareStatement(query1);\r\n\r\n            while (rs.next()){\r\n                int prod_id = rs.getInt(\"prod_id\");\r\n                showProducts.setInt(1,prod_id);\r\n                ResultSet res = showProducts.executeQuery();\r\n\r\n                while (res.next()){\r\n                    String prod_name = res.getString(\"prod_name\");\r\n                    double protein = res.getDouble(\"protein\");\r\n                    double carbohydrates = res.getDouble(\"protein\");\r\n                    double fats = res.getDouble(\"fats\");\r\n                    double calories = res.getDouble(\"calories\");\r\n                    double temp_weight = res.getDouble(\"temp_weight\");\r\n\r\n                    products.add(new Product(prod_id,prod_name,protein,carbohydrates,fats,calories,temp_weight));\r\n                }\r\n            }\r\n\r\n        } catch(SQLException throwables){\r\n            throwables.printStackTrace();\r\n        }\r\n\r\n        return products;\r\n    }\r\n\r\n\r\n    //показать шаги рецепта\r\n    public static List<Step> showSteps(int rec_id){\r\n        List<Step> steps = new ArrayList<>();\r\n        String query = \"SELECT * FROM steps  WHERE rec_id = ?\";\r\n        try (Connection connection = DBconn.GetConnection();\r\n             PreparedStatement preparedStatement = connection.prepareStatement(query)) {\r\n            preparedStatement.setInt(1,rec_id);\r\n            ResultSet rs = preparedStatement.executeQuery();\r\n\r\n            while (rs.next()){\r\n                int step_id = rs.getInt(\"step_id\");\r\n                String text = rs.getString(\"step_text\");\r\n\r\n                steps.add(new Step(rec_id,step_id,text));\r\n            }\r\n        } catch(SQLException throwables){\r\n            throwables.printStackTrace();\r\n        }\r\n\r\n        return steps;\r\n    }\r\n\r\n    //показать картинку шага\r\n\r\n    public static List<Step_img> showStepImg(int step_id){\r\n        List<Step_img> img = new ArrayList<>();\r\n        String query = \"SELECT * FROM step_img  WHERE step_id = ?\";\r\n        try (Connection connection = DBconn.GetConnection();\r\n             PreparedStatement preparedStatement = connection.prepareStatement(query)) {\r\n            preparedStatement.setInt(1,step_id);\r\n            ResultSet rs = preparedStatement.executeQuery();\r\n\r\n            while (rs.next()){\r\n                int img_id = rs.getInt(\"img_id\");\r\n                String img_url = rs.getString(\"img_url\");\r\n\r\n                img.add(new Step_img(step_id,img_id,img_url));\r\n            }\r\n        } catch(SQLException throwables){\r\n            throwables.printStackTrace();\r\n        }\r\n\r\n        return img;\r\n    }\r\n\r\n\r\n    //добавить рецепт\r\n    public static void addRecipe(String rec_name, String category, String main_img, String time,\r\n                                 String difficulty_level,int favorite){\r\n        String query = \"INSERT INTO recipes(rec_name,category,main_img,cooking_time,difficulty_level,favorite) VALUES(?,?,?,?,?,?)\";\r\n        try (Connection connection = DBconn.GetConnection();\r\n             PreparedStatement preparedStatement = connection.prepareStatement(query)) {\r\n\r\n\r\n            preparedStatement.setString(1,rec_name);\r\n            preparedStatement.setString(2, category);\r\n            preparedStatement.setString(3,main_img);\r\n            preparedStatement.setString(4,time);\r\n            preparedStatement.setString(5,difficulty_level);\r\n            preparedStatement.setInt(6,favorite);\r\n\r\n            preparedStatement.executeUpdate();\r\n\r\n\r\n        } catch(SQLException throwables){\r\n            throwables.printStackTrace();\r\n        }\r\n    }\r\n\r\n    //добавить шаги рецепта\r\n\r\n    public static void addStep(int rec_id, String step_text){\r\n        String query = \"INSERT INTO steps(rec_id,step_text) VALUES(?,?)\";\r\n        try (Connection connection = DBconn.GetConnection();\r\n             PreparedStatement preparedStatement = connection.prepareStatement(query)) {\r\n\r\n\r\n            preparedStatement.setInt(1,rec_id);\r\n            preparedStatement.setString(2, step_text);\r\n\r\n            preparedStatement.executeUpdate();\r\n\r\n\r\n        } catch(SQLException throwables){\r\n            throwables.printStackTrace();\r\n        }\r\n    }\r\n\r\n    //добавить картинку рецепта\r\n\r\n    public static void addStepImg(int step_id, String img_url){\r\n        String query = \"INSERT INTO step_img(step_id,img_url) VALUES(?,?)\";\r\n        try (Connection connection = DBconn.GetConnection();\r\n             PreparedStatement preparedStatement = connection.prepareStatement(query)) {\r\n\r\n\r\n            preparedStatement.setInt(1,step_id);\r\n            preparedStatement.setString(2, img_url);\r\n\r\n            preparedStatement.executeUpdate();\r\n\r\n\r\n        } catch(SQLException throwables){\r\n            throwables.printStackTrace();\r\n        }\r\n    }\r\n\r\n\r\n    //добавить продукты в рецепт(создание связи в таблице)\r\n\r\n    public static void addProductToRecipe(int prod_id, int rec_id){\r\n        String query = \"INSERT INTO prod_rec(prod_id,rec_id) VALUES(?,?)\";\r\n        try (Connection connection = DBconn.GetConnection();\r\n             PreparedStatement preparedStatement = connection.prepareStatement(query)) {\r\n\r\n\r\n            preparedStatement.setInt(1,prod_id);\r\n            preparedStatement.setInt(2, rec_id);\r\n\r\n            preparedStatement.executeUpdate();\r\n\r\n\r\n        } catch(SQLException throwables){\r\n            throwables.printStackTrace();\r\n        }\r\n    }\r\n\r\n    //добавить продукт в базу\r\n\r\n    public static void addProduct(String prod_name, double protein, double carbohydrates,double fats, double calories,\r\n                                  double temp_weight){\r\n        String query = \"INSERT INTO products(prod_name,protein,carbohydrates,fats,calories,temp_weight) \" +\r\n                \"VALUES(?,?,?,?,?,?)\";\r\n        try (Connection connection = DBconn.GetConnection();\r\n             PreparedStatement preparedStatement = connection.prepareStatement(query)) {\r\n\r\n\r\n            preparedStatement.setString(1,prod_name);\r\n            preparedStatement.setDouble(2, protein);\r\n            preparedStatement.setDouble(3, carbohydrates);\r\n            preparedStatement.setDouble(4, fats);\r\n            preparedStatement.setDouble(5, calories);\r\n            preparedStatement.setDouble(6, temp_weight);\r\n\r\n            preparedStatement.executeUpdate();\r\n\r\n\r\n        } catch(SQLException throwables){\r\n            throwables.printStackTrace();\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n    //добавить в избранное\r\n    public static void addRecipeToFavorite(int id){\r\n        String query = \"UPDATE recipes SET favorite = 1 WHERE id = ?\";\r\n\r\n        try (Connection connection = DBconn.GetConnection();\r\n             PreparedStatement preparedStatement = connection.prepareStatement(query)) {\r\n\r\n            preparedStatement.setInt(1,id);\r\n\r\n            preparedStatement.executeUpdate();\r\n\r\n        } catch(SQLException throwables){\r\n            throwables.printStackTrace();\r\n        }\r\n    }\r\n\r\n\r\n\r\n    //добавить в корзину\r\n    public static void addRecipeToCart(int rec_id){\r\n        String query = \"SELECT prod_id FROM prod_rec WHERE rec_id = ?\";\r\n        String query1 = \"INSERT INTO cart VALUES(?)\";\r\n        try (Connection connection = DBconn.GetConnection();\r\n             PreparedStatement preparedStatement = connection.prepareStatement(query)) {\r\n            preparedStatement.setInt(1,rec_id);\r\n            ResultSet rs = preparedStatement.executeQuery();\r\n\r\n            PreparedStatement addToCart = connection.prepareStatement(query1);\r\n\r\n            while (rs.next()){\r\n                int prod_id = rs.getInt(\"prod_id\");\r\n                addToCart.setInt(1,prod_id);\r\n                addToCart.executeUpdate();\r\n            }\r\n\r\n\r\n        } catch(SQLException throwables){\r\n            throwables.printStackTrace();\r\n        }\r\n    }\r\n\r\n    //поиск ингридиента по названию\r\n\r\n    public static Product searchProduct(String prod_name) {\r\n        String query = \"SELECT * FROM products WHERE prod_name = ?\";\r\n        Product product = null;\r\n        try (Connection connection = DBconn.GetConnection();\r\n             PreparedStatement preparedStatement = connection.prepareStatement(query)) {\r\n            preparedStatement.setString(1, prod_name);\r\n            ResultSet rs = preparedStatement.executeQuery();\r\n\r\n            while(rs.next()){\r\n                int prod_id = rs.getInt(\"prod_id\");\r\n                double protein = rs.getDouble(\"protein\");\r\n                double carbohydrates = rs.getDouble(\"protein\");\r\n                double fats = rs.getDouble(\"fats\");\r\n                double calories = rs.getDouble(\"calories\");\r\n                double temp_weight = rs.getDouble(\"temp_weight\");\r\n\r\n                product = new Product(prod_id, prod_name, protein, carbohydrates, fats, calories, temp_weight);\r\n            }\r\n\r\n\r\n\r\n\r\n\r\n        } catch (SQLException throwables) {\r\n            throwables.printStackTrace();\r\n        }\r\n        return product;\r\n    }\r\n\r\n    //поиск рецепта по названию\r\n    public static Recipe searchRecipe(String rec_name) {\r\n        String query = \"SELECT * FROM recipes WHERE rec_name = ?\";\r\n        Recipe recipe = null;\r\n        try (Connection connection = DBconn.GetConnection();\r\n             PreparedStatement preparedStatement = connection.prepareStatement(query)) {\r\n            preparedStatement.setString(1, rec_name);\r\n            ResultSet rs = preparedStatement.executeQuery();\r\n\r\n            while(rs.next()){\r\n                int id = rs.getInt(\"id\");\r\n                String category = rs.getString(\"category\");\r\n                String main_img = rs.getString(\"main_img\");\r\n                String cooking_rime = rs.getString(\"cooking_rime\");\r\n                String difficulty_level = rs.getString(\"difficulty_level\");\r\n                int favorite = rs.getInt(\"favorite\");\r\n\r\n                recipe = new Recipe(id, rec_name, category, main_img, cooking_rime, difficulty_level, favorite);\r\n            }\r\n\r\n\r\n\r\n\r\n\r\n        } catch (SQLException throwables) {\r\n            throwables.printStackTrace();\r\n        }\r\n        return recipe;\r\n    }\r\n\r\n\r\n    \r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/example/recipes/Database.java b/src/main/java/com/example/recipes/Database.java
--- a/src/main/java/com/example/recipes/Database.java	(revision d139e9d8a8c1b4e9321a4d3cb3392233108fc4f0)
+++ b/src/main/java/com/example/recipes/Database.java	(date 1701776272889)
@@ -383,5 +383,7 @@
     }
 
 
+
+
     
 }
Index: src/main/java/com/example/recipes/Test.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.recipes;\r\nimport org.jsoup.Jsoup;\r\nimport org.jsoup.nodes.Document;\r\n\r\nimport java.io.IOException;\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\npublic class Test {\r\n    public static void main(String[] args) throws IOException {\r\n\r\n        Pars pars = new Pars();\r\n\r\n        String path = \"https://saechka.ru/recipes/recipe_2337\";\r\n        /*\r\n        String path1 = \"https://saechka.ru/recipes/recipe_pryaniki_dlya_rospisi_morkovki\";\r\n        String path2 = \"https://saechka.ru/recipes/recipe_5163\";\r\n        String path3 = \"https://saechka.ru/recipes/recipe_sloenye_morkovki\";\r\n        String path4 = \"https://saechka.ru/recipes/recipe_blinnyy_tort_s_makom\";\r\n*/\r\n        Recipe a = new Recipe();\r\n\r\n        a = pars.GetRecipe(path);\r\n\r\n        System.out.println(a.name);\r\n\r\n        //Document doc1 = Jsoup.connect(path1).get();\r\n\r\n/*\r\n        Product product = new Product(\"j\", 21.0, 3.0, 5.0, 145.0, 500.0);\r\n        Product product2 = new Product(\"j\", 2.9, 4.8, 2.5, 54.0, 200.0);\r\n        Product product3 = new Product(\"j\", 12.7, 0.7, 11.5, 157.0, 240.0);\r\n\r\n        ArrayList<Product> book = new ArrayList<>();\r\n\r\n\r\n\r\n        book.add(product2);\r\n        book.add(product);\r\n        book.add(product3);\r\n        Double[] e = d.Count_p_c_f_cl(book);\r\n\r\n        for (Double y : e){\r\n            String result = String.format(\"%.2f\", y);\r\n            System.out.println(result);\r\n\r\n        }\r\n*/\r\n\r\n        Product product = Database.searchProduct(\"паddd\");\r\n        System.out.println(product);\r\n\r\n\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/example/recipes/Test.java b/src/main/java/com/example/recipes/Test.java
--- a/src/main/java/com/example/recipes/Test.java	(revision d139e9d8a8c1b4e9321a4d3cb3392233108fc4f0)
+++ b/src/main/java/com/example/recipes/Test.java	(date 1701776125838)
@@ -21,7 +21,7 @@
 
         a = pars.GetRecipe(path);
 
-        System.out.println(a.name);
+        //System.out.println(a.name);
 
         //Document doc1 = Jsoup.connect(path1).get();
 
@@ -46,8 +46,8 @@
         }
 */
 
-        Product product = Database.searchProduct("паddd");
-        System.out.println(product);
+
+
 
 
     }
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"ac776215-f60e-4816-bfce-980eb88cf38a\" name=\"Changes\" comment=\"удалить списки из классов\">\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/com/example/recipes/Database.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/com/example/recipes/Database.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/com/example/recipes/Product.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/com/example/recipes/Product.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/com/example/recipes/Test.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/com/example/recipes/Test.java\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Class\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"MavenImportPreferences\">\r\n    <option name=\"generalSettings\">\r\n      <MavenGeneralSettings>\r\n        <option name=\"mavenHome\" value=\"Use Maven wrapper\" />\r\n      </MavenGeneralSettings>\r\n    </option>\r\n  </component>\r\n  <component name=\"ProjectColorInfo\">{\r\n  &quot;associatedIndex&quot;: 3\r\n}</component>\r\n  <component name=\"ProjectId\" id=\"2Xk67yBtNNI8tHDRNludMATKdPF\" />\r\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">{\r\n  &quot;keyToString&quot;: {\r\n    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,\r\n    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,\r\n    &quot;git-widget-placeholder&quot;: &quot;master&quot;,\r\n    &quot;last_opened_file_path&quot;: &quot;C:/Users/Alinochka/Desktop/mysql-connector-j-8.2.0/mysql-connector-j-8.2.0.jar&quot;,\r\n    &quot;project.structure.last.edited&quot;: &quot;Modules&quot;,\r\n    &quot;project.structure.proportion&quot;: &quot;0.15&quot;,\r\n    &quot;project.structure.side.proportion&quot;: &quot;0.2&quot;,\r\n    &quot;settings.editor.selected.configurable&quot;: &quot;preferences.pathVariables&quot;\r\n  }\r\n}</component>\r\n  <component name=\"RunManager\">\r\n    <configuration name=\"Test\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"com.example.recipes.Test\" />\r\n      <module name=\"Recipes\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"com.example.recipes.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <recent_temporary>\r\n      <list>\r\n        <item itemvalue=\"Application.Test\" />\r\n      </list>\r\n    </recent_temporary>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"ac776215-f60e-4816-bfce-980eb88cf38a\" name=\"Changes\" comment=\"\" />\r\n      <created>1699160569174</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1699160569174</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\"абдя\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1701674715102</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1701674715102</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00002\" summary=\"изменение класса рецептов и парсинг\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1701677585670</created>\r\n      <option name=\"number\" value=\"00002\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1701677585670</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00003\" summary=\"удалить списки из классов\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1701678065611</created>\r\n      <option name=\"number\" value=\"00003\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1701678065611</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00004\" summary=\"удалить списки из классов\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1701678124397</created>\r\n      <option name=\"number\" value=\"00004\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00004\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1701678124397</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"5\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <MESSAGE value=\"абдя\" />\r\n    <MESSAGE value=\"изменение класса рецептов и парсинг\" />\r\n    <MESSAGE value=\"удалить списки из классов\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"удалить списки из классов\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision d139e9d8a8c1b4e9321a4d3cb3392233108fc4f0)
+++ b/.idea/workspace.xml	(date 1701768065516)
@@ -4,10 +4,9 @@
     <option name="autoReloadType" value="SELECTIVE" />
   </component>
   <component name="ChangeListManager">
-    <list default="true" id="ac776215-f60e-4816-bfce-980eb88cf38a" name="Changes" comment="удалить списки из классов">
+    <list default="true" id="ac776215-f60e-4816-bfce-980eb88cf38a" name="Changes" comment="функция поиска рецепта">
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/src/main/java/com/example/recipes/Database.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/example/recipes/Database.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/java/com/example/recipes/Product.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/example/recipes/Product.java" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/src/main/java/com/example/recipes/Test.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/example/recipes/Test.java" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
@@ -114,13 +113,22 @@
       <option name="project" value="LOCAL" />
       <updated>1701678124397</updated>
     </task>
-    <option name="localTasksCounter" value="5" />
+    <task id="LOCAL-00005" summary="функция поиска рецепта">
+      <option name="closed" value="true" />
+      <created>1701753620855</created>
+      <option name="number" value="00005" />
+      <option name="presentableId" value="LOCAL-00005" />
+      <option name="project" value="LOCAL" />
+      <updated>1701753620856</updated>
+    </task>
+    <option name="localTasksCounter" value="6" />
     <servers />
   </component>
   <component name="VcsManagerConfiguration">
     <MESSAGE value="абдя" />
     <MESSAGE value="изменение класса рецептов и парсинг" />
     <MESSAGE value="удалить списки из классов" />
-    <option name="LAST_COMMIT_MESSAGE" value="удалить списки из классов" />
+    <MESSAGE value="функция поиска рецепта" />
+    <option name="LAST_COMMIT_MESSAGE" value="функция поиска рецепта" />
   </component>
 </project>
\ No newline at end of file
