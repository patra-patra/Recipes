Index: src/main/java/module-info.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>module com.example.recipes {\r\n    requires javafx.controls;\r\n    requires javafx.fxml;\r\n    requires jsoup;\r\n\r\n\r\n    opens com.example.recipes to javafx.fxml;\r\n    exports com.example.recipes;\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/module-info.java b/src/main/java/module-info.java
--- a/src/main/java/module-info.java	(revision d7cc551b22fabf68551cae5a0fa2acff3f3a17e4)
+++ b/src/main/java/module-info.java	(date 1701748611138)
@@ -2,6 +2,7 @@
     requires javafx.controls;
     requires javafx.fxml;
     requires jsoup;
+    requires java.sql;
 
 
     opens com.example.recipes to javafx.fxml;
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"ac776215-f60e-4816-bfce-980eb88cf38a\" name=\"Changes\" comment=\"Начало парсинга\">\r\n      <change afterPath=\"$PROJECT_DIR$/src/main/java/com/example/recipes/Step.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/com/example/recipes/HelloApplication.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/com/example/recipes/HelloApplication.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/com/example/recipes/Pars.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/com/example/recipes/Pars.java\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Class\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_BRANCH_BY_REPOSITORY\">\r\n      <map>\r\n        <entry key=\"$PROJECT_DIR$\" value=\"master\" />\r\n      </map>\r\n    </option>\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"GithubDefaultAccount\">\r\n    <option name=\"defaultAccountId\" value=\"b9c564d6-85f2-4d3e-bd47-3fdac4e192c0\" />\r\n  </component>\r\n  <component name=\"HighlightingSettingsPerFile\">\r\n    <setting file=\"file://$PROJECT_DIR$/src/main/java/com/example/recipes/Pars.java\" root0=\"FORCE_HIGHLIGHTING\" />\r\n  </component>\r\n  <component name=\"MavenImportPreferences\">\r\n    <option name=\"generalSettings\">\r\n      <MavenGeneralSettings>\r\n        <option name=\"mavenHome\" value=\"Use Maven wrapper\" />\r\n      </MavenGeneralSettings>\r\n    </option>\r\n  </component>\r\n  <component name=\"ProjectColorInfo\">{\r\n  &quot;associatedIndex&quot;: 3\r\n}</component>\r\n  <component name=\"ProjectId\" id=\"2Xk67yBtNNI8tHDRNludMATKdPF\" />\r\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">{\r\n  &quot;keyToString&quot;: {\r\n    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,\r\n    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,\r\n    &quot;SHARE_PROJECT_CONFIGURATION_FILES&quot;: &quot;true&quot;,\r\n    &quot;git-widget-placeholder&quot;: &quot;parsing&quot;,\r\n    &quot;last_opened_file_path&quot;: &quot;D:/Distr/jsoup-1.16.2.jar&quot;,\r\n    &quot;project.structure.last.edited&quot;: &quot;Global Libraries&quot;,\r\n    &quot;project.structure.proportion&quot;: &quot;0.15&quot;,\r\n    &quot;project.structure.side.proportion&quot;: &quot;0.36355475&quot;,\r\n    &quot;settings.editor.selected.configurable&quot;: &quot;org.jetbrains.plugins.github.ui.GithubSettingsConfigurable&quot;\r\n  }\r\n}</component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"ac776215-f60e-4816-bfce-980eb88cf38a\" name=\"Changes\" comment=\"\" />\r\n      <created>1699160569174</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1699160569174</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\"Начало парсинга\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1699524629204</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1699524629204</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00002\" summary=\"Начало парсинга\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1699524679759</created>\r\n      <option name=\"number\" value=\"00002\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1699524679759</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"3\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State>\r\n              <option name=\"FILTERS\">\r\n                <map>\r\n                  <entry key=\"branch\">\r\n                    <value>\r\n                      <list>\r\n                        <option value=\"parsing\" />\r\n                      </list>\r\n                    </value>\r\n                  </entry>\r\n                </map>\r\n              </option>\r\n            </State>\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <MESSAGE value=\"Начало парсинга\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"Начало парсинга\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision d7cc551b22fabf68551cae5a0fa2acff3f3a17e4)
+++ b/.idea/workspace.xml	(date 1701748549199)
@@ -4,11 +4,11 @@
     <option name="autoReloadType" value="SELECTIVE" />
   </component>
   <component name="ChangeListManager">
-    <list default="true" id="ac776215-f60e-4816-bfce-980eb88cf38a" name="Changes" comment="Начало парсинга">
-      <change afterPath="$PROJECT_DIR$/src/main/java/com/example/recipes/Step.java" afterDir="false" />
+    <list default="true" id="ac776215-f60e-4816-bfce-980eb88cf38a" name="Changes" comment="парсинг картинок шагов">
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/src/main/java/com/example/recipes/HelloApplication.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/example/recipes/HelloApplication.java" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/src/main/java/com/example/recipes/Pars.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/example/recipes/Pars.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/com/example/recipes/Recipe.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/example/recipes/Recipe.java" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
@@ -18,6 +18,7 @@
   <component name="FileTemplateManagerImpl">
     <option name="RECENT_TEMPLATES">
       <list>
+        <option value="FxmlFile" />
         <option value="Class" />
       </list>
     </option>
@@ -25,7 +26,7 @@
   <component name="Git.Settings">
     <option name="RECENT_BRANCH_BY_REPOSITORY">
       <map>
-        <entry key="$PROJECT_DIR$" value="master" />
+        <entry key="$PROJECT_DIR$" value="parsing" />
       </map>
     </option>
     <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
@@ -52,19 +53,26 @@
     <option name="hideEmptyMiddlePackages" value="true" />
     <option name="showLibraryContents" value="true" />
   </component>
-  <component name="PropertiesComponent">{
-  &quot;keyToString&quot;: {
-    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,
-    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
-    &quot;SHARE_PROJECT_CONFIGURATION_FILES&quot;: &quot;true&quot;,
-    &quot;git-widget-placeholder&quot;: &quot;parsing&quot;,
-    &quot;last_opened_file_path&quot;: &quot;D:/Distr/jsoup-1.16.2.jar&quot;,
-    &quot;project.structure.last.edited&quot;: &quot;Global Libraries&quot;,
-    &quot;project.structure.proportion&quot;: &quot;0.15&quot;,
-    &quot;project.structure.side.proportion&quot;: &quot;0.36355475&quot;,
-    &quot;settings.editor.selected.configurable&quot;: &quot;org.jetbrains.plugins.github.ui.GithubSettingsConfigurable&quot;
+  <component name="PropertiesComponent"><![CDATA[{
+  "keyToString": {
+    "RunOnceActivity.OpenProjectViewOnStart": "true",
+    "RunOnceActivity.ShowReadmeOnStart": "true",
+    "SHARE_PROJECT_CONFIGURATION_FILES": "true",
+    "git-widget-placeholder": "master",
+    "last_directory_selection": "C:/Users/user/IdeaProjects/Recipes/src/main/resources/com/example/recipes",
+    "last_opened_file_path": "D:/Distr/mysql-connector-j-8.2.0/mysql-connector-j-8.2.0/mysql-connector-j-8.2.0.jar",
+    "project.structure.last.edited": "Global Libraries",
+    "project.structure.proportion": "0.15",
+    "project.structure.side.proportion": "0.36355475",
+    "settings.editor.selected.configurable": "preferences.keymap"
   }
-}</component>
+}]]></component>
+  <component name="RecentsManager">
+    <key name="MoveFile.RECENT_KEYS">
+      <recent name="C:\Users\user\IdeaProjects\Recipes\src\main\resources" />
+      <recent name="C:\Users\user\IdeaProjects\Recipes\src\main\resources\com\example\recipes" />
+    </key>
+  </component>
   <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
   <component name="TaskManager">
     <task active="true" id="Default" summary="Default task">
@@ -90,7 +98,71 @@
       <option name="project" value="LOCAL" />
       <updated>1699524679759</updated>
     </task>
-    <option name="localTasksCounter" value="3" />
+    <task id="LOCAL-00003" summary="поля сущностей">
+      <option name="closed" value="true" />
+      <created>1700710578012</created>
+      <option name="number" value="00003" />
+      <option name="presentableId" value="LOCAL-00003" />
+      <option name="project" value="LOCAL" />
+      <updated>1700710578012</updated>
+    </task>
+    <task id="LOCAL-00004" summary="поля сущностей">
+      <option name="closed" value="true" />
+      <created>1700710586777</created>
+      <option name="number" value="00004" />
+      <option name="presentableId" value="LOCAL-00004" />
+      <option name="project" value="LOCAL" />
+      <updated>1700710586777</updated>
+    </task>
+    <task id="LOCAL-00005" summary="Иконка с котёнком поварёнком">
+      <option name="closed" value="true" />
+      <created>1700750303034</created>
+      <option name="number" value="00005" />
+      <option name="presentableId" value="LOCAL-00005" />
+      <option name="project" value="LOCAL" />
+      <updated>1700750303034</updated>
+    </task>
+    <task id="LOCAL-00006" summary="Иконка с котёнком поварёнком">
+      <option name="closed" value="true" />
+      <created>1700750319932</created>
+      <option name="number" value="00006" />
+      <option name="presentableId" value="LOCAL-00006" />
+      <option name="project" value="LOCAL" />
+      <updated>1700750319932</updated>
+    </task>
+    <task id="LOCAL-00007" summary="Парсинг названия, времени, шагов, ингридиентов, нахождения уровня сложности.">
+      <option name="closed" value="true" />
+      <created>1701337040383</created>
+      <option name="number" value="00007" />
+      <option name="presentableId" value="LOCAL-00007" />
+      <option name="project" value="LOCAL" />
+      <updated>1701337040383</updated>
+    </task>
+    <task id="LOCAL-00008" summary="Исправление парсинга шагов, сортировка по названию в алфавитном порядке">
+      <option name="closed" value="true" />
+      <created>1701346150430</created>
+      <option name="number" value="00008" />
+      <option name="presentableId" value="LOCAL-00008" />
+      <option name="project" value="LOCAL" />
+      <updated>1701346150430</updated>
+    </task>
+    <task id="LOCAL-00009" summary="Исправление парсинга шагов(2), получение ссылки на главную картинку рецепта">
+      <option name="closed" value="true" />
+      <created>1701602427270</created>
+      <option name="number" value="00009" />
+      <option name="presentableId" value="LOCAL-00009" />
+      <option name="project" value="LOCAL" />
+      <updated>1701602427270</updated>
+    </task>
+    <task id="LOCAL-00010" summary="парсинг картинок шагов">
+      <option name="closed" value="true" />
+      <created>1701609584434</created>
+      <option name="number" value="00010" />
+      <option name="presentableId" value="LOCAL-00010" />
+      <option name="project" value="LOCAL" />
+      <updated>1701609584434</updated>
+    </task>
+    <option name="localTasksCounter" value="11" />
     <servers />
   </component>
   <component name="Vcs.Log.Tabs.Properties">
@@ -118,6 +190,16 @@
   </component>
   <component name="VcsManagerConfiguration">
     <MESSAGE value="Начало парсинга" />
-    <option name="LAST_COMMIT_MESSAGE" value="Начало парсинга" />
+    <MESSAGE value="поля сущностей" />
+    <MESSAGE value="Иконка с котёнком поварёнком" />
+    <MESSAGE value="Парсинг названия, времени, шагов, ингридиентов, нахождения уровня сложности." />
+    <MESSAGE value="Исправление парсинга шагов, сортировка по названию в алфавитном порядке" />
+    <MESSAGE value="Исправление парсинга шагов(2), получение ссылки на главную картинку рецепта" />
+    <MESSAGE value="парсинг картинок шагов" />
+    <option name="LAST_COMMIT_MESSAGE" value="парсинг картинок шагов" />
+  </component>
+  <component name="XSLT-Support.FileAssociations.UIState">
+    <expand />
+    <select />
   </component>
 </project>
\ No newline at end of file
Index: src/main/java/com/example/recipes/HelloApplication.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.recipes;\r\n\r\nimport javafx.application.Application;\r\nimport javafx.fxml.FXMLLoader;\r\nimport javafx.scene.Scene;\r\nimport javafx.stage.Stage;\r\nimport org.jsoup.Jsoup;\r\nimport org.jsoup.nodes.Document;\r\n\r\nimport java.io.FileOutputStream;\r\nimport java.io.IOException;\r\nimport java.io.InputStream;\r\nimport java.io.OutputStream;\r\nimport java.net.URL;\r\n\r\n\r\npublic class HelloApplication extends Application {\r\n    @Override\r\n    public void start(Stage stage) throws IOException {\r\n        FXMLLoader fxmlLoader = new FXMLLoader(HelloApplication.class.getResource(\"hello-view.fxml\"));\r\n        Scene scene = new Scene(fxmlLoader.load(), 320, 240);\r\n        stage.setTitle(\"Hello!\");\r\n        stage.setScene(scene);\r\n        stage.show();\r\n    }\r\n/*\r\n* function createRandomString(sumString){\r\nconst symbolArr = \"1234567890qwertyuiopasdfghjklzxcvbnmQWERTYUIOPASDFGHJKLZXCVBNM\";\r\nvar randomString = \"\";\r\nfor (let i=0; i<sumString; i++){\r\n\tvar index = Math.floor(Math.random()*symbolArr.length);\r\n\trandomString +=symbolArr[index];\r\n}\r\nreturn randomString;\r\n}\r\n\r\nconsole.log(createRandomString(10));\r\n*\r\n*\r\n* */\r\n    public static void main( String[] args ) throws IOException{\r\n\r\n        String file = \"111111\"+\".jpg\";\r\n        Pars pars = new Pars();\r\n        String path = \"https://saechka.ru/recipes/recipe_4445\";\r\n        //https://saechka.ru/\r\n        //pars.NameRecipe(path);\r\n        //pars.Time(path);\r\n        //pars.Nutrition(path);\r\n        //pars.Ingridients(path);\r\n        pars.Steps(path);\r\n        //pars.Category(path);\r\n\r\n\r\n\r\n        /*\r\n        URL img = new URL (\"https://saechka.ru/upload/iblock/884/001.jpg\");\r\n        InputStream is = img.openStream();\r\n        OutputStream os = new FileOutputStream(file);\r\n        byte[] b = new byte[2048];\r\n        int lenght;\r\n        while ((lenght = is.read(b)) != -1){\r\n            os.write(b, 0, lenght);\r\n        }\r\n        is.close();\r\n        os.close();\r\n*/\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/example/recipes/HelloApplication.java b/src/main/java/com/example/recipes/HelloApplication.java
--- a/src/main/java/com/example/recipes/HelloApplication.java	(revision d7cc551b22fabf68551cae5a0fa2acff3f3a17e4)
+++ b/src/main/java/com/example/recipes/HelloApplication.java	(date 1701748178818)
@@ -6,64 +6,77 @@
 import javafx.stage.Stage;
 import org.jsoup.Jsoup;
 import org.jsoup.nodes.Document;
+import org.jsoup.nodes.Element;
 
 import java.io.FileOutputStream;
 import java.io.IOException;
 import java.io.InputStream;
 import java.io.OutputStream;
 import java.net.URL;
-
+import java.util.ArrayList;
+import java.util.Arrays;
+import java.util.Collections;
 
 public class HelloApplication extends Application {
     @Override
     public void start(Stage stage) throws IOException {
-        FXMLLoader fxmlLoader = new FXMLLoader(HelloApplication.class.getResource("hello-view.fxml"));
-        Scene scene = new Scene(fxmlLoader.load(), 320, 240);
-        stage.setTitle("Hello!");
-        stage.setScene(scene);
-        stage.show();
-    }
-/*
-* function createRandomString(sumString){
-const symbolArr = "1234567890qwertyuiopasdfghjklzxcvbnmQWERTYUIOPASDFGHJKLZXCVBNM";
-var randomString = "";
-for (let i=0; i<sumString; i++){
-	var index = Math.floor(Math.random()*symbolArr.length);
-	randomString +=symbolArr[index];
-}
-return randomString;
-}
 
-console.log(createRandomString(10));
-*
-*
-* */
+    }
     public static void main( String[] args ) throws IOException{
-
-        String file = "111111"+".jpg";
         Pars pars = new Pars();
-        String path = "https://saechka.ru/recipes/recipe_4445";
-        //https://saechka.ru/
-        //pars.NameRecipe(path);
-        //pars.Time(path);
-        //pars.Nutrition(path);
-        //pars.Ingridients(path);
-        pars.Steps(path);
-        //pars.Category(path);
+
+        String path = "https://saechka.ru/recipes/recipe_2337";//https://saechka.ru/recipes/recipe_2202";
+        String path1 = "https://saechka.ru/recipes/recipe_pryaniki_dlya_rospisi_morkovki";
+        String path2 = "https://saechka.ru/recipes/recipe_5163";
+        String path3 = "https://saechka.ru/recipes/recipe_sloenye_morkovki";
+        String path4 = "https://saechka.ru/recipes/recipe_blinnyy_tort_s_makom";
 
+        Recipe a = new Recipe();
 
+        //a = pars.GetRecipe(path1);
 
+        Document doc1 = Jsoup.connect(path1).get();
+
+        Recipe b, c = null, d = new Recipe();
+
+        Product product = new Product("j", 21.0, 3.0, 5.0, 145.0, 500.0);
+        Product product2 = new Product("j", 2.9, 4.8, 2.5, 54.0, 200.0);
+        Product product3 = new Product("j", 12.7, 0.7, 11.5, 157.0, 240.0);
+
+        ArrayList<Product> book = new ArrayList<>();
+
+
+
+        book.add(product2);
+        book.add(product);
+        book.add(product3);
+        Double[] e = d.Count_p_c_f_cl(book);
+
+        for (Double y : e){
+            String result = String.format("%.2f", y);
+            System.out.println(result);
+
+        }
+
+
+       // b = pars.GetRecipe(path4);
+       // c = pars.GetRecipe(path2);
         /*
-        URL img = new URL ("https://saechka.ru/upload/iblock/884/001.jpg");
-        InputStream is = img.openStream();
-        OutputStream os = new FileOutputStream(file);
-        byte[] b = new byte[2048];
-        int lenght;
-        while ((lenght = is.read(b)) != -1){
-            os.write(b, 0, lenght);
+        d = pars.GetRecipe(path);
+        for (String g : d.Ingr){
+            System.out.println(g);
+
         }
-        is.close();
-        os.close();
+/*
+        ArrayList<Recipe> book = new ArrayList<>();
+        book.add(a);
+        book.add(b);
+        book.add(c);
+        book.add(d);
+
+        Collections.sort(book, new CompByName());
+
 */
+
     }
 }
\ No newline at end of file
Index: src/main/java/com/example/recipes/Recipe.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.recipes;\r\n\r\nimport java.net.MalformedURLException;\r\nimport java.net.URL;\r\nimport java.util.ArrayList;\r\n\r\npublic class Recipe {\r\n    Integer id;\r\n    String name;\r\n    ArrayList<String> category;\r\n    String main_img;\r\n    String time;\r\n    String difficulty_level;\r\n    Product products;\r\n    String favorite;\r\n    ArrayList<Step> steps;\r\n\r\n\r\n    public Recipe() {\r\n\r\n        name = \"empty\";\r\n        //category = \"empty\";\r\n        //main_img = new URL(\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSPm4OafJsXDQRBuPD3DlTaf64EYDyx_mA-sQ&usqp=CAU\");\r\n        time = \"empty\";\r\n        difficulty_level = \"empty\";\r\n        products = new Product();\r\n        favorite = \"empty\";\r\n    }\r\n\r\n    public Recipe(String _name, String _category, String _time, String _di) {\r\n        name = \"empty\";\r\n        //category = \"empty\";\r\n        //main_img = new URL(\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSPm4OafJsXDQRBuPD3DlTaf64EYDyx_mA-sQ&usqp=CAU\");\r\n        time = \"empty\";\r\n        difficulty_level = \"empty\";\r\n        products = new Product();\r\n        favorite = \"empty\";\r\n    }\r\n\r\n    private void GetAll(){\r\n\r\n    }\r\n    private void Change(){\r\n\r\n    }\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/example/recipes/Recipe.java b/src/main/java/com/example/recipes/Recipe.java
--- a/src/main/java/com/example/recipes/Recipe.java	(revision d7cc551b22fabf68551cae5a0fa2acff3f3a17e4)
+++ b/src/main/java/com/example/recipes/Recipe.java	(date 1701748165515)
@@ -2,46 +2,67 @@
 
 import java.net.MalformedURLException;
 import java.net.URL;
+import java.text.DecimalFormat;
 import java.util.ArrayList;
+import java.util.Collections;
+import java.util.Comparator;
 
 public class Recipe {
-    Integer id;
+    //Integer id;
     String name;
-    ArrayList<String> category;
+    String category;
     String main_img;
     String time;
     String difficulty_level;
-    Product products;
-    String favorite;
-    ArrayList<Step> steps;
-
+    ArrayList<String> Ingr;
+    //String favorite;
+    public ArrayList<Step> steps;
 
     public Recipe() {
-
         name = "empty";
-        //category = "empty";
-        //main_img = new URL("https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSPm4OafJsXDQRBuPD3DlTaf64EYDyx_mA-sQ&usqp=CAU");
+        category = "empty";
+        main_img = "empty";
         time = "empty";
         difficulty_level = "empty";
-        products = new Product();
-        favorite = "empty";
+        //favorite = "empty";
     }
+    public Double[] Count_p_c_f_cl (ArrayList<Product> Ingr){
+        Double[] p_c_f_cl = {0.0, 0.0, 0.0, 0.0};
+
 
-    public Recipe(String _name, String _category, String _time, String _di) {
-        name = "empty";
-        //category = "empty";
-        //main_img = new URL("https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSPm4OafJsXDQRBuPD3DlTaf64EYDyx_mA-sQ&usqp=CAU");
-        time = "empty";
-        difficulty_level = "empty";
-        products = new Product();
-        favorite = "empty";
-    }
+        for (Product ing: Ingr) {
+            p_c_f_cl[0] += ing.temp_weight/100 * ing.protein;
+            p_c_f_cl[1] += ing.temp_weight/100 * ing.carbohydrates;
+            p_c_f_cl[2] += ing.temp_weight/100 * ing.fats;
+            p_c_f_cl[3] += ing.temp_weight/100 * ing.calories;
+        }
 
-    private void GetAll(){
-
+        return p_c_f_cl;
+    }
+    private Double GetWeight(String j){
+        return 0.0;
+    }
+    private ArrayList<Recipe> GetAll(){
+        ArrayList<Recipe> all = new ArrayList<>();
+        return all;
+    }
+    private void Change(String _name, Recipe recipe){
+        recipe.name = _name;
+    }
+    public int compareTo(Recipe o) {
+        return name.compareTo(o.name);
+    }
+    public String getName() {
+        return name;
+    }
+    public static final Comparator<Recipe> COMPARE_BY_COUNT = new Comparator<Recipe>() {
+        @Override
+        public int compare(Recipe lhs, Recipe rhs) {
+            return lhs.getCount() - rhs.getCount();
+        }
+    };
+    private int getCount() {
+        return 0;
     }
-    private void Change(){
-
-    }
+}
 
-}
Index: src/main/java/com/example/recipes/Pars.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.recipes;\r\n\r\nimport org.jsoup.Jsoup;\r\nimport org.jsoup.nodes.Document;\r\nimport org.jsoup.nodes.Element;\r\nimport org.jsoup.select.Elements;\r\n\r\nimport java.io.IOException;\r\n\r\npublic class Pars {\r\n    private Recipe GetRecipe(String path) throws IOException{\r\n        Recipe temp_ = new Recipe();\r\n\r\n        Document doc1 = Jsoup.connect(path).get();\r\n\r\n        //String title_dish = doc1.select(\"h1\").text();\r\n        // String time = text2.text();\r\n        //Elements text3 = doc1.getElementsByClass(\"nutrition_nutrition\");\r\n        //String nutrition = text3.text();\r\n        //Elements text5 = doc1.getElementsByClass(\"cook\");\r\n        //String tips = text5.text();\r\n        //Elements text6 = doc1.getElementsByClass(\"cat_some\");\r\n        //String cat = text2.text();\r\n\r\n        temp_.name = doc1.select(\"h1\").text();\r\n        temp_.time = doc1.getElementsByClass(\"time_cook\").text();\r\n\r\n        Elements text4 = doc1.getElementsByClass(\"ingredients\");\r\n        String nutrition2 = text4.text();\r\n\r\n        //temp_.tips = doc1.getElementsByClass(\"cook\").text();\r\n        //temp_.category = doc1.getElementsByClass(\"cat_some\").text();\r\n\r\n        return temp_;\r\n    }\r\n    public void NameRecipe(String path) throws IOException {\r\n        Document doc1 = Jsoup.connect(path).get();\r\n        String title_dish = doc1.select(\"h1\").text();\r\n\r\n        System.out.println(title_dish);\r\n    }\r\n    public void Time(String path) throws IOException {\r\n        Document doc1 = Jsoup.connect(path).get();\r\n        Elements text2 = doc1.getElementsByClass(\"time_cook\");\r\n        String time = text2.text();\r\n\r\n        System.out.println(time);\r\n    }\r\n    public void Nutrition(String path) throws IOException {\r\n        Document doc1 = Jsoup.connect(path).get();\r\n        Elements text2 = doc1.getElementsByClass(\"nutrition_nutrition\");\r\n        String nutrition = text2.text();\r\n\r\n        System.out.println(nutrition);\r\n    }\r\n    public void Ingridients(String path) throws IOException {\r\n        Document doc1 = Jsoup.connect(path).get();\r\n        Elements text2 = doc1.getElementsByClass(\"ingredients\");\r\n        String nutrition = text2.text();\r\n\r\n        System.out.println(nutrition);\r\n    }\r\n    public void Steps(String path) throws IOException {\r\n        Document doc1 = Jsoup.connect(path).get();\r\n        Elements text2 = doc1.getElementsByClass(\"cook\");\r\n        Elements ol = doc1.getElementsByTag(\"ol\");\r\n        \r\n        String s = doc1.select(\"h2\").text();\r\n        //Elements aaa = doc1.select(\"li\");\r\n\r\n\r\n        Elements text = doc1.select(\"cook\");\r\n\r\n        //String tips = text2.text();\r\n        for (Element a: ol){\r\n            System.out.println(a + \"\\n\\n\\n\");\r\n        }\r\n\r\n\r\n       //System.out.println(s);\r\n    }\r\n    public void Category(String path) throws IOException {\r\n        Document doc1 = Jsoup.connect(path).get();\r\n        Elements text2 = doc1.getElementsByClass(\"cat_some\");\r\n        String nutrition = text2.text();\r\n\r\n        System.out.println(nutrition);\r\n    }\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/example/recipes/Pars.java b/src/main/java/com/example/recipes/Pars.java
--- a/src/main/java/com/example/recipes/Pars.java	(revision d7cc551b22fabf68551cae5a0fa2acff3f3a17e4)
+++ b/src/main/java/com/example/recipes/Pars.java	(date 1701748168117)
@@ -1,90 +1,130 @@
 package com.example.recipes;
-
+import javafx.scene.Parent;
 import org.jsoup.Jsoup;
 import org.jsoup.nodes.Document;
 import org.jsoup.nodes.Element;
 import org.jsoup.select.Elements;
 
+import java.io.FileOutputStream;
 import java.io.IOException;
+import java.io.InputStream;
+import java.io.OutputStream;
+import java.net.MalformedURLException;
+import java.net.URL;
+import java.util.ArrayList;
+import java.util.Arrays;
+import java.util.Collections;
+import java.util.List;
 
 public class Pars {
-    private Recipe GetRecipe(String path) throws IOException{
+    public Recipe GetRecipe(String path) throws IOException{
+
         Recipe temp_ = new Recipe();
-
         Document doc1 = Jsoup.connect(path).get();
 
-        //String title_dish = doc1.select("h1").text();
-        // String time = text2.text();
-        //Elements text3 = doc1.getElementsByClass("nutrition_nutrition");
-        //String nutrition = text3.text();
-        //Elements text5 = doc1.getElementsByClass("cook");
-        //String tips = text5.text();
-        //Elements text6 = doc1.getElementsByClass("cat_some");
-        //String cat = text2.text();
-
-        temp_.name = doc1.select("h1").text();
-        temp_.time = doc1.getElementsByClass("time_cook").text();
-
-        Elements text4 = doc1.getElementsByClass("ingredients");
-        String nutrition2 = text4.text();
-
-        //temp_.tips = doc1.getElementsByClass("cook").text();
-        //temp_.category = doc1.getElementsByClass("cat_some").text();
+        temp_.name = NameRecipe(doc1);
+        temp_.main_img = GetMainImg(doc1);
+        temp_.time = Time(doc1);
+        temp_.Ingr = new ArrayList<>(Arrays.asList(Ingridients(doc1)));
+        temp_.steps = new ArrayList<>(Arrays.asList(Steps(doc1)));
+        temp_.category = Category(doc1);
+        temp_.difficulty_level = DifficultyLevel(temp_.time, temp_.steps);
 
         return temp_;
     }
-    public void NameRecipe(String path) throws IOException {
-        Document doc1 = Jsoup.connect(path).get();
+    private String NameRecipe(Document doc1) throws IOException {
         String title_dish = doc1.select("h1").text();
 
-        System.out.println(title_dish);
+        return title_dish;
     }
-    public void Time(String path) throws IOException {
-        Document doc1 = Jsoup.connect(path).get();
+    private String Time(Document doc1) throws IOException {
         Elements text2 = doc1.getElementsByClass("time_cook");
         String time = text2.text();
 
-        System.out.println(time);
+        return time;
     }
-    public void Nutrition(String path) throws IOException {
-        Document doc1 = Jsoup.connect(path).get();
-        Elements text2 = doc1.getElementsByClass("nutrition_nutrition");
-        String nutrition = text2.text();
-
-        System.out.println(nutrition);
-    }
-    public void Ingridients(String path) throws IOException {
-        Document doc1 = Jsoup.connect(path).get();
+    private String[] Ingridients(Document doc1) throws IOException {
         Elements text2 = doc1.getElementsByClass("ingredients");
-        String nutrition = text2.text();
+        String pre_ingr = text2.text();
 
-        System.out.println(nutrition);
-    }
-    public void Steps(String path) throws IOException {
-        Document doc1 = Jsoup.connect(path).get();
-        Elements text2 = doc1.getElementsByClass("cook");
-        Elements ol = doc1.getElementsByTag("ol");
-        
-        String s = doc1.select("h2").text();
-        //Elements aaa = doc1.select("li");
+        pre_ingr = pre_ingr.substring(0, pre_ingr.length() - 1);
+        String[] ingredients;
+
+        ingredients = pre_ingr.split(", ");
 
+        return ingredients;
+    }
+    private Step[] Steps(Document doc1) throws IOException {
+        Elements text23 = doc1.select("ol");
 
-        Elements text = doc1.select("cook");
+        Step[] steps = new Step[0];
 
-        //String tips = text2.text();
-        for (Element a: ol){
-            System.out.println(a + "\n\n\n");
+        for (Element a : text23) {
+            steps = new Step[a.children().size()];
+
+            for (int i = 0; i < a.children().size(); i++) {
+                String t;
+                Step step = new Step();
+                ArrayList<String> list_img = new ArrayList<>();
+                if (a.child(i).tagName() == "p"){
+                    t = a.child(i).child(0).attr("href");
+                    list_img.add(t);
+                    steps[i-1].img = list_img;
+                }
+                if (a.child(i).tagName() != "p") {
+                    t = a.child(i).text();
+                    step.text = t;
+                }
+                steps[i] = step;
+            }
         }
 
+        //System.out.println(steps[1].text);
+        //String a = "https://saechka.ru/" + steps[1].img.get(0);
+        //System.out.println(a);
+        return steps;
+    }
+    private String Category(Document doc1) throws IOException {
+        Elements text2 = doc1.getElementsByClass("cat_razd");
+        String cat = text2.text();
 
-       //System.out.println(s);
+        return cat;
     }
-    public void Category(String path) throws IOException {
-        Document doc1 = Jsoup.connect(path).get();
-        Elements text2 = doc1.getElementsByClass("cat_some");
-        String nutrition = text2.text();
+    private String DifficultyLevel(String time, ArrayList<Step> steps){
+
+        String[] time_el = time.split("");
 
-        System.out.println(nutrition);
+        if (time_el[1] == "ч." || steps.size() > 10){
+            return "Высокая";
+        }
+        else if(time_el[1] == "мин." && (30 < Integer.parseInt(time_el[0]) && Integer.parseInt(time_el[0]) < 60) || steps.size() > 5 && steps.size() < 10){
+            return "Cредняя";
+        }
+        else {
+            return "Низкая";
+        }
+    }
+    private String GetMainImg(Document doc1){
+        Elements meta = doc1.select("meta[property=og:image]");
+        String path_img = "";
+        for (Element s : meta) {
+            path_img = s.attr("content");
+        }
+        return path_img;
     }
+    private void DownloadImg(String path, String name) throws IOException {
+
+        String file = name+".jpg";
 
+        URL img = new URL (path);
+        InputStream is = img.openStream();
+        OutputStream os = new FileOutputStream(file);
+        byte[] b = new byte[2048];
+        int lenght;
+        while ((lenght = is.read(b)) != -1){
+            os.write(b, 0, lenght);
+        }
+        is.close();
+        os.close();
+    }
 }
